80. when you see package-lock.json it's basically storing all the versions of
    things you wouldn't want to be messed with when you share your git repo

79. The parameter you put into the component anonymous function will always be
    "props" which is any attribute you include when you call the component

        ex:
        
            const Directory = ( props ) => {
                return (
                    <div className='directory-container'>
                    {props.categories.map((category) => (
                        <CategoryItem key={category.id} category={category} /*these are props*/ />  
                    ))} 
                    </div> 
                );
            };

83. - routes is a folder that will hold all of our top level components
    - the parent element will still render with the child until we tell it otherwise
    - outlet is the place where the child elements should render

86. Fragment can act like a parent element without actually having to render and element or
    something on the page. Remember, you need one parent element when you're returning HTML
    from a component function because if you have multiple parent elements that's like trying
    to return more than one value from a return call.

105. Contexts
        -these are a special feature that allows you to send info directly to the nodes that   
         need it
        
        ex:
            export const UserProvider = ({ children }) => {
                return <UserContext.Provider>{children}</UserContext.Provider>
            };

            <UserProvider>
                <app /> //this would be the children that get passed into the UserProvider function ^^^
            </UserProvider>

            only the things nested inside the provider will be able to access the context

////////////////////////////////////////////////////////////////////////////////////////////////////
Hooks

    hooks enable the use of state in functional components. Before you need to use a class
    organizational system to access them, but hooks allow you to "hook into" react state.

    state is a kind of internal memory that stores data relating to a component