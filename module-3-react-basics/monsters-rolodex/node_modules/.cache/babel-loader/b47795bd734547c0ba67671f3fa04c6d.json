{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cristianamateas\\\\Desktop\\\\complete-react-developer\\\\module-3-react-basics\\\\monsters-rolodex\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchField, setSearchField] = useState(''); // const [value, setValue] = useState(defaultValue);\n\n  console.log({\n    searchField\n  });\n\n  const onSearchChange = event => {\n    // The event just return information regarding what changed\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Robots Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChangeHandler: onSearchChange,\n      placeholder: \"search monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}; // class App extends Component {\n//   constructor() {\n//     super();\n//     // initial state\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     };\n//   };\n//   componentDidMount() {\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//       .then(response => response.json()) // uses what was returned from the previous line of code and parses the text body into a .json format\n//         // .then(users => console.log(users)) // after the text was parse, it can then console.log it\n//         .then(users => {\n//           this.setState(() => {\n//             return {monsters: users};\n//           });\n//         });\n//   };\n// onSearchChange = event => {\n//   // console.log(event); // The event just return information regarding what changed\n//   let searchField = event.target.value.toLocaleLowerCase();\n//   this.setState(() => {\n//     return { searchField }; // same as saying return { searchField: searchField };\n//   });\n// }\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n//     let filteredMonsters = monsters.filter(monster => {return monster.name.toLocaleLowerCase().includes(searchField)});\n//     return (\n//       <div className=\"App\">\n//         <h1 className='app-title'>Robots Rolodex</h1>\n//         {/* When there's a change in the search field, it gets processed here  \n//           Returns a new searchField value in the state */}\n//         <SearchBox className='monsters-search-box' onChangeHandler={onSearchChange} placeholder='search monsters'/>\n//         {/* Where the filtered monsters actually get rendered onto the page */}\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   };\n// }\n\n\n_s(App, \"VGd9Bn50RPD7o2JX3FSqKKNwMHU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CardList","SearchBox","App","searchField","setSearchField","console","log","onSearchChange","event","searchFieldString","target","value","toLocaleLowerCase"],"sources":["C:/Users/cristianamateas/Desktop/complete-react-developer/module-3-react-basics/monsters-rolodex/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nconst App = () => {\n\n  const [searchField, setSearchField] = useState(''); // const [value, setValue] = useState(defaultValue);\n  console.log({searchField});\n\n  const onSearchChange = event => { // The event just return information regarding what changed\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='app-title'>Robots Rolodex</h1>\n\n      {/* When there's a change in the search field, it gets processed here  \n        Returns a new searchField value in the state */}\n      <SearchBox className='monsters-search-box' onChangeHandler={onSearchChange} placeholder='search monsters'/>\n\n      {/* Where the filtered monsters actually get rendered onto the page */}\n      {/* <CardList monsters={filteredMonsters} /> */}\n\n    </div>\n  )\n}\n\n// class App extends Component {\n\n//   constructor() {\n//     super();\n\n//     // initial state\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     };\n//   };\n\n//   componentDidMount() {\n\n//     fetch('https://jsonplaceholder.typicode.com/users')\n      \n//       .then(response => response.json()) // uses what was returned from the previous line of code and parses the text body into a .json format\n//         // .then(users => console.log(users)) // after the text was parse, it can then console.log it\n      \n//         .then(users => {\n//           this.setState(() => {\n//             return {monsters: users};\n//           });\n//         });\n//   };\n\n  // onSearchChange = event => {\n  //   // console.log(event); // The event just return information regarding what changed\n\n  //   let searchField = event.target.value.toLocaleLowerCase();\n  //   this.setState(() => {\n  //     return { searchField }; // same as saying return { searchField: searchField };\n  //   });\n  // }\n\n//   render() {\n\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n\n//     let filteredMonsters = monsters.filter(monster => {return monster.name.toLocaleLowerCase().includes(searchField)});\n\n//     return (\n\n//       <div className=\"App\">\n//         <h1 className='app-title'>Robots Rolodex</h1>\n\n//         {/* When there's a change in the search field, it gets processed here  \n//           Returns a new searchField value in the state */}\n//         <SearchBox className='monsters-search-box' onChangeHandler={onSearchChange} placeholder='search monsters'/>\n\n//         {/* Where the filtered monsters actually get rendered onto the page */}\n//         <CardList monsters={filteredMonsters} />\n\n//       </div>\n\n//     );\n//   };\n\n// }\n\nexport default App;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CAFgB,CAEoC;;EACpDM,OAAO,CAACC,GAAR,CAAY;IAACH;EAAD,CAAZ;;EAEA,MAAMI,cAAc,GAAGC,KAAK,IAAI;IAAE;IAChC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,iBAAnB,EAA1B;IACAR,cAAc,CAACK,iBAAD,CAAd;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAI,SAAS,EAAC,WAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,SAAD;MAAW,SAAS,EAAC,qBAArB;MAA2C,eAAe,EAAEF,cAA5D;MAA4E,WAAW,EAAC;IAAxF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAvBD,C,CAyBA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AAEA;AACA;AACA;AACA;AACA;AAEF;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;;;GApFML,G;;KAAAA,G;AAsFN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}