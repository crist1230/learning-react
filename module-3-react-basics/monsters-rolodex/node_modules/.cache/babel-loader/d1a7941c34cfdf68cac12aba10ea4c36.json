{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\cristianamateas\\\\Desktop\\\\complete-react-developer\\\\module-3-react-basics\\\\monsters-rolodex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cristianamateas\\\\Desktop\\\\complete-react-developer\\\\module-3-react-basics\\\\monsters-rolodex\\\\src\\\\App.js\";\n\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchField = _useState2[0],\n      setSearchField = _useState2[1]; // const [value, setValue] = useState(defaultValue);\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      monsters = _useState4[0],\n      setMonsters = _useState4[1];\n\n  var _useState5 = useState(monsters),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filteredMonsters = _useState6[0],\n      setFilteredMonsters = _useState6[1];\n\n  console.log('render');\n  useEffect(function () {\n    fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n      return response.json();\n    }) // uses what was returned from the previous line of code and parses the text body into a .json format\n    .then(function (users) {\n      return setMonsters(users);\n    });\n  }, []);\n  useEffect(function () {\n    var newFilteredMonsters = monsters.filter(function (monster) {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n\n  var onSearchChange = function onSearchChange(event) {\n    // The event just return information regarding what changed\n    var searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"app-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Robots Rolodex\"), /*#__PURE__*/React.createElement(SearchBox, {\n    className: \"monsters-search-box\",\n    onChangeHandler: onSearchChange,\n    placeholder: \"search monsters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardList, {\n    monsters: filteredMonsters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}; // class App extends Component {\n//   constructor() {\n//     super();\n//     // initial state\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     };\n//   };\n// componentDidMount() {\n//   fetch('https://jsonplaceholder.typicode.com/users')\n//     .then(response => response.json()) // uses what was returned from the previous line of code and parses the text body into a .json format\n//       // .then(users => console.log(users)) // after the text was parse, it can then console.log it\n//       .then(users => {\n//         this.setState(() => {\n//           return {monsters: users};\n//         });\n//       });\n// };\n// onSearchChange = event => {\n//   // console.log(event); // The event just return information regarding what changed\n//   let searchField = event.target.value.toLocaleLowerCase();\n//   this.setState(() => {\n//     return { searchField }; // same as saying return { searchField: searchField };\n//   });\n// }\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n// let filteredMonsters = monsters.filter(monster => {return monster.name.toLocaleLowerCase().includes(searchField)});\n//     return (\n//       <div className=\"App\">\n//         <h1 className='app-title'>Robots Rolodex</h1>\n//         {/* When there's a change in the search field, it gets processed here  \n//           Returns a new searchField value in the state */}\n//         <SearchBox className='monsters-search-box' onChangeHandler={onSearchChange} placeholder='search monsters'/>\n//         {/* Where the filtered monsters actually get rendered onto the page */}\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   };\n// }\n\n\nexport default App;","map":{"version":3,"names":["useState","useEffect","React","CardList","SearchBox","App","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilteredMonsters","console","log","fetch","then","response","json","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value"],"sources":["C:/Users/cristianamateas/Desktop/complete-react-developer/module-3-react-basics/monsters-rolodex/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport React from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nconst App = () => {\n  const [searchField, setSearchField] = useState(''); // const [value, setValue] = useState(defaultValue);\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  console.log('render');\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json()) // uses what was returned from the previous line of code and parses the text body into a .json format\n    .then(users => setMonsters(users));\n  }, []);\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {return monster.name.toLocaleLowerCase().includes(searchField)});\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n\n  const onSearchChange = event => { // The event just return information regarding what changed\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='app-title'>Robots Rolodex</h1>\n\n      {/* When there's a change in the search field, it gets processed here  \n        Returns a new searchField value in the state */}\n      <SearchBox className='monsters-search-box' onChangeHandler={onSearchChange} placeholder='search monsters'/>\n\n      {/* Where the filtered monsters actually get rendered onto the page */}\n      <CardList monsters={filteredMonsters} />\n\n    </div>\n  )\n}\n\n// class App extends Component {\n\n//   constructor() {\n//     super();\n\n//     // initial state\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     };\n//   };\n\n  // componentDidMount() {\n\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n      \n  //     .then(response => response.json()) // uses what was returned from the previous line of code and parses the text body into a .json format\n  //       // .then(users => console.log(users)) // after the text was parse, it can then console.log it\n      \n  //       .then(users => {\n  //         this.setState(() => {\n  //           return {monsters: users};\n  //         });\n  //       });\n  // };\n\n  // onSearchChange = event => {\n  //   // console.log(event); // The event just return information regarding what changed\n\n  //   let searchField = event.target.value.toLocaleLowerCase();\n  //   this.setState(() => {\n  //     return { searchField }; // same as saying return { searchField: searchField };\n  //   });\n  // }\n\n//   render() {\n\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n\n    // let filteredMonsters = monsters.filter(monster => {return monster.name.toLocaleLowerCase().includes(searchField)});\n\n//     return (\n\n//       <div className=\"App\">\n//         <h1 className='app-title'>Robots Rolodex</h1>\n\n//         {/* When there's a change in the search field, it gets processed here  \n//           Returns a new searchField value in the state */}\n//         <SearchBox className='monsters-search-box' onChangeHandler={onSearchChange} placeholder='search monsters'/>\n\n//         {/* Where the filtered monsters actually get rendered onto the page */}\n//         <CardList monsters={filteredMonsters} />\n\n//       </div>\n\n//     );\n//   };\n\n// }\n\nexport default App;"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,OAAO,WAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAAA,gBACsBL,QAAQ,CAAC,EAAD,CAD9B;EAAA;EAAA,IACTM,WADS;EAAA,IACIC,cADJ,kBACoC;;;EADpC,iBAEgBP,QAAQ,CAAC,EAAD,CAFxB;EAAA;EAAA,IAETQ,QAFS;EAAA,IAECC,WAFD;;EAAA,iBAGgCT,QAAQ,CAACQ,QAAD,CAHxC;EAAA;EAAA,IAGTE,gBAHS;EAAA,IAGSC,mBAHT;;EAKhBC,OAAO,CAACC,GAAR,CAAY,QAAZ;EAEAZ,SAAS,CAAC,YAAM;IACda,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;IAAA,CADd,EACmC;IADnC,CAECF,IAFD,CAEM,UAAAG,KAAK;MAAA,OAAIT,WAAW,CAACS,KAAD,CAAf;IAAA,CAFX;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMAjB,SAAS,CAAC,YAAM;IACd,IAAMkB,mBAAmB,GAAGX,QAAQ,CAACY,MAAT,CAAgB,UAAAC,OAAO,EAAI;MAAC,OAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0ClB,WAA1C,CAAP;IAA8D,CAA1F,CAA5B;IACAK,mBAAmB,CAACQ,mBAAD,CAAnB;EACD,CAHQ,EAGN,CAACX,QAAD,EAAWF,WAAX,CAHM,CAAT;;EAKA,IAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;IAAE;IAChC,IAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,iBAAnB,EAA1B;IACAhB,cAAc,CAACoB,iBAAD,CAAd;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,WAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBADF,eAKE,oBAAC,SAAD;IAAW,SAAS,EAAC,qBAArB;IAA2C,eAAe,EAAEF,cAA5D;IAA4E,WAAW,EAAC,iBAAxF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,eAQE,oBAAC,QAAD;IAAU,QAAQ,EAAEf,gBAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARF,CADF;AAaD,CApCD,C,CAsCA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEE;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEF;AAEA;AACA;AAEI;AAEJ;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;;;AAEA,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}